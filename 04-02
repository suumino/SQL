SELECT salary, 
        salary/30 일급,
        ROUND(salary/30, 0)적용결과0,
        ROUND(salary/30, 1)적용결과1,
        ROUND(salary/30, -1)적용결과MINUS1
FROM employees;
-- ROUND(수, 올림적용할자리) : 반올림 함수


SELECT TO_CHAR(SYSDATE, 'YY/MM/DD/HH24:MI') 오늘날짜,
        SYSDATE +1 더하기1, 
        SYSDATE -1 빼기1, 
        TO_DATE('20171202') - TO_DATE('20171201') 날짜빼기,
        SYSDATE + 13/24 시간더하기
FROM DUAL;
--시간 계산--

SELECT SYSDATE, hire_date, MONTHS_BETWEEN(SYSDATE, hire_date)
FROM employees
WHERE department_id = 100;
-- MONTHS_BETWEEN : 두 날짜 사이의 개월수 계산하기


SELECT hire_date,
        ADD_MONTHS(hire_date, 3),
        ADD_MONTHS(hire_date, -3)
FROM employees
WHERE employee_id BETWEEN 100 AND 106;
-- ADD_MONTHS : 날짜에 월을 더하거나 뺌


SELECT hire_date,
        NEXT_DAY(hire_date, '금요일'),
        NEXT_DAY(hire_date, 6)
FROM employees
WHERE employee_id BETWEEN 100 AND 106;
-- NEXT_DAY : 다음 오는 요일의 날짜를 출력해줌


SELECT TO_CHAR(SYSDATE, 'YY'),
       TO_CHAR(SYSDATE, 'YYYY'),
       TO_CHAR(SYSDATE, 'MM'),
       TO_CHAR(SYSDATE, 'MON'),
       TO_CHAR(SYSDATE, 'YYYYMMDD') 응용적용1,
       TO_CHAR(TO_DATE('20171008'), 'YYYYMMDD') 응용적용2
FROM   dual;
-- 변환


SELECT employee_id, first_name, last_name, salary,
       CASE
            WHEN salary >= 9000 THEN '상위급여'
            WHEN salary BETWEEN 6000 AND 8999 THEN '중위급여'
            ELSE '하위급여'
       END AS 급여등급
FROM  employees
WHERE job_id = 'IT_PROG';
----이런거도 있단다
